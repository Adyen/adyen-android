configurations.maybeCreate("default")
artifacts.add("default", file('TwintSdk-android-7.0.0.aar'))

ext.mavenArtifactId = "twint-sdk"
ext.mavenArtifactName = "Adyen checkout Twint SDK wrapper"
ext.mavenArtifactDescription = "Adyen checkout Twint SDK wrapper for Adyen's Checkout API."

apply plugin: "maven-publish"
apply plugin: "signing"

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

final theGroupId = "com.adyen.checkout"
final theArtifactId = project.mavenArtifactId
final theVersion = project.version_name

final theName = project.mavenArtifactName
final theDescription = project.mavenArtifactDescription
final theUrl = "https://github.com/Adyen/adyen-android"

final theLicenseName = "MIT License"
final theLicenseUrl = "https://opensource.org/licenses/MIT"

final theOrganizationName = "Adyen N.V."
final theOrganizationUrl = "https://www.adyen.com/"

final theTeamName = "Checkout"

final theScmConnection = "scm:git:git://github.com/Adyen/adyen-android.git"
final theScmUrl = "https://github.com/Adyen/adyen-android"

group theGroupId

project.afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId theGroupId
                artifactId theArtifactId
                version theVersion

                artifact('TwintSdk-android-7.0.0.aar')

                pom {
                    name = theName
                    description = theDescription
                    url = theUrl
                    licenses {
                        license {
                            name = theLicenseName
                            url = theLicenseUrl
                        }
                    }
                    organization {
                        name = theOrganizationName
                        url = theOrganizationUrl
                    }
                    developers {
                        developer {
                            name = theTeamName
                            organization = theOrganizationName
                            organizationUrl = theOrganizationUrl
                        }
                    }
                    scm {
                        connection = theScmConnection
                        developerConnection = theScmConnection
                        url = theScmUrl
                    }
                }

                // Add dependencies to the POM file.
                pom.withXml {
                    logger.lifecycle("\nPublishing maven repository $theGroupId:$theArtifactId:$theVersion\n")

                    final dependenciesNode = asNode().appendNode("dependencies")

                    ext.addDependency = { dep, scope ->
                        if (dep.name != 'unspecified') {
                            final depGroup = dep.group != rootProject.name ? dep.group : theGroupId
                            final depName = dep.name
                            final depVersion = dep.version != 'unspecified' ? dep.version : theVersion

                            final dependencyNode = dependenciesNode.appendNode("dependency")
                            dependencyNode.appendNode("groupId", depGroup)
                            dependencyNode.appendNode("artifactId", depName)
                            dependencyNode.appendNode("version", depVersion)
                            dependencyNode.appendNode("scope", scope)

                            if (!dep.hasProperty("transitive") || !dep.transitive) {
                                final exclusionNode = dependencyNode.appendNode("exclusions").appendNode("exclusion")
                                exclusionNode.appendNode("groupId", "*")
                                exclusionNode.appendNode("artifactId", "*")
                            } else if (!dep.properties.excludeRules.empty) {
                                final exclusionNode = dependencyNode.appendNode("exclusions").appendNode("exclusion")
                                dep.properties.excludeRules.each { rule ->
                                    exclusionNode.appendNode("groupId", rule.group ?: "*")
                                    exclusionNode.appendNode("artifactId", rule.module ?: "*")
                                }
                            }
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                name = "sonatype"
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications
    }
}
