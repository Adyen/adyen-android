apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.adyen.customuiapplication"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "SERVER_URL", "\"" + System.getProperty("SERVER_URL", "").trim() + "\""
        buildConfigField "String", "API_KEY", "\"" + System.getProperty("API_KEY", "").trim() + "\""
        buildConfigField "String", "API_HEADER_KEY", "\"" + System.getProperty("API_HEADER_KEY", "").trim() + "\""
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable rootProject.debug_debuggable
            testCoverageEnabled = rootProject.debug_testCoverageEnabled
        }
    }
    testBuildType rootProject.testBuildType
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile project(':testutils')
    compile "com.android.support:appcompat-v7:${rootProject.supportLibVersion}"
    testCompile "junit:junit:${rootProject.jUnitVersion}"
    if (publishNonDefault) {
        debugCompile project(path: ':adyen-core', configuration: 'debug')
        releaseCompile project(path: ':adyen-core', configuration: 'release')
    } else {
        compile project(':adyen-core')
    }

}
