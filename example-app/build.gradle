/*
 * Copyright (c) 2019 Adyen N.V.
 *
 * This file is open source and available under the MIT license. See the LICENSE file for more info.
 *
 * Created by caiof on 8/2/2019.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

}

apply from: "${rootDir}/config/gradle/codeQuality.gradle"
apply from: "${rootDir}/config/gradle/ci.gradle"

if (file("local.gradle").exists()) {
    apply from: "local.gradle"
} else {
    logger.lifecycle("File example-app/local.gradle not found. Falling back to default file with no values.")
    apply from: "default.local.gradle"
}

// This runConnectedAndroidTest.gradle script is applied,
// so it will be possible to run the example app connected android tests
// in Jenkins release process.
apply from: "${rootDir}/config/gradle/runConnectedAndroidTest.gradle"

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.adyen.checkout.example"

        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        animationsDisabled = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

}

dependencies {
    // Checkout
    implementation project(':drop-in')
//    implementation "com.adyen.checkout:drop-in:4.7.0"

    // Dependencies
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"

    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.preference:preference-ktx:$preference_version"

    implementation "com.google.android.material:material:$material_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_adapters_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_kotlin_adapter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_version"

    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_adapter_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Tests
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "com.jakewharton.espresso:okhttp3-idling-resource:$okhttp_idling_resource_version"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiautomator_version"
}
