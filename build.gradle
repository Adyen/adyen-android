buildscript {
    apply from: './dependencies.gradle'
}

plugins {
    id 'com.android.application' version "$android_gradle_plugin_version" apply false
    id 'com.android.library' version "$android_gradle_plugin_version" apply false
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'com.google.devtools.ksp' version "$ksp_version" apply false
    id 'com.google.dagger.hilt.android' version "$hilt_version" apply false
    id 'io.gitlab.arturbosch.detekt' version "$detekt_gradle_plugin_version"
    id 'org.jetbrains.dokka' version "$dokka_version"
    id 'org.sonarqube' version "$sonarqube_version"
    id 'jacoco'
    id 'org.jetbrains.kotlinx.binary-compatibility-validator' version "$binary_compatibility_validator_version"
}

apply from: "config/gradle/dokkaRoot.gradle"
apply from: "config/gradle/sonarcloud.gradle"

ext {
    checkoutRedirectScheme = "adyencheckout"
}

apiValidation {
    ignoredPackages += [
        "com/adyen/checkout/adyen3ds2/databinding",
        "com/adyen/checkout/ach/databinding",
        "com/adyen/checkout/action/databinding",
        "com/adyen/checkout/action/core/databinding",
        "com/adyen/checkout/await/databinding",
        "com/adyen/checkout/bacs/databinding",
        "com/adyen/checkout/bcmc/databinding",
        "com/adyen/checkout/blik/databinding",
        "com/adyen/checkout/boleto/databinding",
        "com/adyen/checkout/card/databinding",
        "com/adyen/checkout/cashapppay/databinding",
        "com/adyen/checkout/core/databinding",
        "com/adyen/checkout/components/compose/databinding",
        "com/adyen/checkout/components/core/databinding",
        "com/adyen/checkout/conveniencestoresjp/databinding",
        "com/adyen/checkout/cse/databinding",
        "com/adyen/checkout/dotpay/databinding",
        "com/adyen/checkout/dropin/databinding",
        "com/adyen/checkout/dropin/compose/databinding",
        "com/adyen/checkout/econtext/databinding",
        "com/adyen/checkout/entercash/databinding",
        "com/adyen/checkout/eps/databinding",
        "com/adyen/checkout/giftcard/databinding",
        "com/adyen/checkout/googlepay/databinding",
        "com/adyen/checkout/ideal/databinding",
        "com/adyen/checkout/instant/databinding",
        "com/adyen/checkout/issuerlist/databinding",
        "com/adyen/checkout/mbway/databinding",
        "com/adyen/checkout/molpay/databinding",
        "com/adyen/checkout/onlinebankingcore/databinding",
        "com/adyen/checkout/onlinebankingcz/databinding",
        "com/adyen/checkout/onlinebankingjp/databinding",
        "com/adyen/checkout/onlinebankingpl/databinding",
        "com/adyen/checkout/onlinebankingsk/databinding",
        "com/adyen/checkout/openbanking/databinding",
        "com/adyen/checkout/paybybank/databinding",
        "com/adyen/checkout/payeasy/databinding",
        "com/adyen/checkout/qrcode/databinding",
        "com/adyen/checkout/redirect/databinding",
        "com/adyen/checkout/sepa/databinding",
        "com/adyen/checkout/sessions/core/databinding",
        "com/adyen/checkout/seveneleven/databinding",
        "com/adyen/checkout/twint/databinding",
        "com/adyen/checkout/ui/core/databinding",
        "com/adyen/checkout/upi/databinding",
        "com/adyen/checkout/voucher/databinding",
        "com/adyen/checkout/wechatpay/databinding",
    ]
    ignoredProjects += ["example-app", "test-core"]
    nonPublicMarkers += ["androidx.annotation.RestrictTo"]
}

subprojects {
    def javaVersion = 11

    plugins.withType(com.android.build.gradle.BasePlugin).configureEach {
        android {
            if (project.hasProperty("strip-resources") && project.property("strip-resources") == "true") {
                defaultConfig {
                    resConfigs "en", "xxhdpi"
                }

                buildTypes {
                    debug {
                        crunchPngs false
                    }
                }
            }

            compileOptions {
                sourceCompatibility = javaVersion
                targetCompatibility = javaVersion
            }

            packagingOptions {
                excludes += "/META-INF/{AL2.0,LGPL2.1}"
                merges += "META-INF/LICENSE.md"
                merges += "META-INF/LICENSE-notice.md"
            }
        }
    }

    plugins.withType(org.jetbrains.kotlin.gradle.plugin.KotlinAndroidPluginWrapper).configureEach {
        kotlin {
            jvmToolchain(javaVersion)
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += [
                '-opt-in=kotlin.RequiresOptIn',
            ]
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

apply from: file('config/gradle/dependencyGraph.gradle')
