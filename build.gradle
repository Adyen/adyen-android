buildscript {
    apply from: './dependencies.gradle'
}

plugins {
    id 'com.android.application' version "$android_gradle_plugin_version" apply false
    id 'com.android.library' version "$android_gradle_plugin_version" apply false
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'com.google.devtools.ksp' version "$ksp_version" apply false
    id 'com.google.dagger.hilt.android' version "$hilt_version" apply false
    id 'io.gitlab.arturbosch.detekt' version "$detekt_gradle_plugin_version"
    id 'org.jetbrains.dokka' version "$dokka_version"
    id 'org.sonarqube' version "$sonarqube_version"
    id 'jacoco'
    id 'org.jetbrains.kotlinx.binary-compatibility-validator' version "$binary_compatibility_validator_version"
}

apply from: "config/gradle/dokkaRoot.gradle"
apply from: "config/gradle/sonarcloud.gradle"

ext {
    checkoutRedirectScheme = "adyencheckout"
}

subprojects {
    def javaVersion = 11

    plugins.withType(com.android.build.gradle.BasePlugin).configureEach {
        android {
            if (project.hasProperty("strip-resources") && project.property("strip-resources") == "true") {
                defaultConfig {
                    resConfigs "en", "xxhdpi"
                }

                buildTypes {
                    debug {
                        crunchPngs false
                    }
                }
            }

            compileOptions {
                sourceCompatibility = javaVersion
                targetCompatibility = javaVersion
            }

            packagingOptions {
                excludes += "/META-INF/{AL2.0,LGPL2.1}"
                merges += "META-INF/LICENSE.md"
                merges += "META-INF/LICENSE-notice.md"
            }
        }
    }

    plugins.withType(org.jetbrains.kotlin.gradle.plugin.KotlinAndroidPluginWrapper).configureEach {
        kotlin {
            jvmToolchain(javaVersion)
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += [
                '-opt-in=kotlin.RequiresOptIn',
            ]
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

apply from: file('config/gradle/dependencyGraph.gradle')
