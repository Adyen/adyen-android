apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
// TODO: add support for signing of artifacts

def theGroupId = "com.adyen.checkout"
def theArtifactId = project.releaseArtifactId
def theVersion = rootProject.versionName

group theGroupId
version theVersion

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        bintrayMavenPublication(MavenPublication) {
            groupId theGroupId
            artifactId theArtifactId
            version theVersion

            artifact androidJavadocsJar
            artifact androidSourcesJar
            artifact bundleReleaseAar

            pom.withXml {
                final dependenciesNode = asNode().appendNode('dependencies')

                ext.addDependency = { Dependency dep, String scope ->
                    final dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.group == theGroupId ? dep.name.substring(9) : dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', scope)

                    if (!dep.transitive) {
                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            exclusionNode.appendNode('groupId', rule.group ?: '*')
                            exclusionNode.appendNode('artifactId', rule.module ?: '*')
                        }
                    }
                }

                configurations.api.getAllDependencies().each { dep -> addDependency(dep, "compile") }
                configurations.implementation.getAllDependencies().each { dep -> addDependency(dep, "runtime") }
            }
        }
    }
}

bintray {
    user = System.env.BINTRAY_USER
    key = System.env.BINTRAY_KEY
    publications = ['bintrayMavenPublication']
    pkg {
        // TODO: Put under userOrg?
        //userOrg = 'checkout'
        repo = 'adyen-v2'
        name = theArtifactId
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Adyen/adyen-android.git'
        issueTrackerUrl = 'https://github.com/Adyen/adyen-android/issues'
        publish = false
        version {
            name = theVersion
            released  = new Date()
            vcsTag = theVersion
            gpg {
                // TODO: enable GPG signing
                sign = false
                passphrase = findProperty('BINTRAY_GPG_PASSPHRASE')
            }
        }
    }
}
